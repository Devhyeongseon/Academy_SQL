
--WHERE절 *
SELECT * FROM EMPLOYEES;

SELECT FIRST_NAME, LAST_NAME, JOB_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven'; --대소문자를 구분함
SELECT * FROM EMPLOYEES WHERE SALARY >= 15000;
SELECT * FROM EMPLOYEES WHERE SALARY < 10000;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID <> 100; --같지 않음
SELECT * FROM EMPLOYEES WHERE HIRE_DATE = '03/06/17'; --날짜 비교는 문자열로합니다
SELECT * FROM EMPLOYEES WHERE HIRE_DATE <= '04/01/01'; --날짜 비교도 됩니다.

--BETWEEN AND연산자 (이상~이하) *
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 15000;
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '03/03/01' AND '08/03/01'; -- 날짜도 비교가 됨

--IN 연산자 *
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN(80, 90, 100);
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('FI_ACCOUNT', 'SA_MAN' );

--LIKE 연산자 (특정 단어가 포함된) - 검색기능에 사용됩니다 *
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '03%'; -- 03년도로 시작하는
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%01'; -- 01일로 끝나는 
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%05%'; -- 05가 포함되는 데이터
SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE '%MAN%';

SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___05%'; -- 4번째가 05인
SELECT * FROM EMPLOYEES WHERE EMAIL LIKE '_A%';        -- 2번쨰가 A인

--IS NULL, IS NOT NULL *
SELECT FIRST_NAME, COMMISSION_PCT FROM EMPLOYEES;
SELECT FIRST_NAME, COMMISSION_PCT FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IS NULL;

--AND, OR 엔드가 오어보다 빠릅니다 * 
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR'; -- 둘중 하나 만족
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND JOB_ID = 'FI_MGR'; -- 둘다 만족하는

SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR' AND SALARY >= 7000; -- AND가 먼저 동작함
SELECT * FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >= 7000; -- 우선순위는 ()

--NOT 키워드들의 부정
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (80, 90, 100);
SELECT * FROM EMPLOYEES WHERE JOB_ID NOT LIKE '%IT%';

--------------------------------------------------------------------------------
-- ORDER BY 구문
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC; --ASC
SELECT * FROM EMPLOYEES ORDER BY JOB_ID; -- 생략시에 오름차순정렬
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG', 'SA_MAN') ORDER BY FIRST_NAME DESC;

-- ALIAS도 ORDER BY절에 사용이 됩니다.
SELECT FIRST_NAME || LAST_NAME AS NAME, SALARY  FROM EMPLOYEES ORDER BY NAME DESC;

-- 정렬구문을 여러개도 사용할 수 있습니다.
SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES ORDER BY DEPARTMENT_ID DESC, FIRST_NAME ASC;








